plugins {
    id 'idea'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'com.palantir.git-version' version '0.3.0'
    id 'maven'
}

project.version = gitVersion()
project.group = 'com.jetbrains.python'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

repositories {
    jcenter()
}

uploadArchives {
    repositories {
        maven {
            url uri('../mvn_repo')
        }
    }
}

dependencies {
    compile gradleApi()
}

task includePythonBuildZip {
    File pythonBuildZip = new File(buildDir, "resources/main/python-build.zip")

    onlyIf {
        !pythonBuildZip.exists()
    }

    doLast {
        new File(buildDir, "pyenv.zip").with { pyenvZip ->
            ant.get(dest: pyenvZip) {
                ant.url(url: "https://github.com/pyenv/pyenv/archive/master.zip")
            }
            ant.unzip(src: pyenvZip, dest: buildDir)
            pyenvZip.delete()
        }

        ant.zip(destfile: pythonBuildZip) {
            ant.fileset(dir: new File(buildDir, "pyenv-master/plugins/python-build"))
        }
    }
}

jar.dependsOn(includePythonBuildZip)
processResources.shouldRunAfter(includePythonBuildZip)

pluginBundle {
    website = 'https://github.com/JetBrains/gradle-python-envs'
    vcsUrl = 'https://github.com/JetBrains/gradle-python-envs'
    description = 'Gradle plugin to install different Python environments'
    tags = ['python', 'miniconda', 'conda']
    plugins {
        pythonEnvsPlugin {
            id = 'com.jetbrains.python.envs'
            displayName = 'Gradle Python Envs plugin'
        }
    }
}
